{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactFormName.js","components/ContactForm/ContactFormNumber.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/phonebook/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactFormName","title","onChange","value","nameInputId","htmlFor","TextField","label","variant","type","placeholder","pattern","required","ContactFormNumber","connect","contacts","phonebookContacts","dispatch","onSubmit","useState","setName","setNumber","numberInputId","handleChange","e","target","className","css","ContactFormWrapper","preventDefault","Button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","phonebookFilter","s","ContactList","map","onClick","Container","children","ContainerWrapper","action","currentTarget","App","createReducer","state","_","combineReducers","ContactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.239b8c7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBtn\":\"ContactForm_formBtn__1V2bg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2bP7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerWrapper\":\"Container_ContainerWrapper__1DxN3\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nconst deleteContact = createAction('phonebook/delete');\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport { addContact, deleteContact, changeFilter };\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\n\nconst ContactFormName = ({ title, onChange, value, nameInputId }) => {\n  return (\n    <>\n      <label htmlFor={nameInputId}>\n        {/* {title}&ensp; */}\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          value={value}\n          onChange={onChange}\n          type=\"text\"\n          name={title}\n          placeholder={title}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </>\n  );\n};\n\nexport default ContactFormName;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\n\nconst ContactFormNumber = ({ title, onChange, value }) => {\n  return (\n    <>\n      <label htmlFor=\"\">\n        {/* {title}&ensp; */}\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Number\"\n          variant=\"outlined\"\n          value={value}\n          onChange={onChange}\n          type=\"text\"\n          name={title}\n          placeholder={title}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </>\n  );\n};\n\nexport default ContactFormNumber;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions.js';\n\nimport css from './ContactForm.module.css';\nimport ContactFormName from './ContactFormName';\nimport ContactFormNumber from './ContactFormNumber';\n\nimport Button from '@mui/material/Button';\n\nfunction ContactForm({ phonebookContacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  //onChangeInput\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  //onSubmitForm\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.ContactFormWrapper} onSubmit={handleSubmit}>\n      <ContactFormName\n        nameInputId={nameInputId}\n        title=\"name\"\n        value={name}\n        onChange={handleChange}\n        className=\"FormName\"\n      />\n      <ContactFormNumber\n        numberInputId={numberInputId}\n        title=\"number\"\n        value={number}\n        onChange={handleChange}\n        className=\"FormNumber\"\n      />\n      <p>\n        <Button variant=\"outlined\" type=\"submit\">\n          Send\n        </Button>\n      </p>\n    </form>\n  );\n}\n\nconst mapStateToProps = ({ contacts: { phonebookContacts } }) =>\n  phonebookContacts;\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions.js';\nimport Button from '@mui/material/Button';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <>\n      <ul className={s.ContactList}>\n        {contacts &&\n          contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              {name} {number}\n              &ensp;\n              <Button\n                variant=\"outlined\"\n                type=\"button\"\n                onClick={() => deleteContact(id)}\n              >\n                Delete\n              </Button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\nconst mapStateToProps = ({\n  contacts: { phonebookContacts, phonebookFilter },\n}) => ({\n  contacts: getVisibleContacts(phonebookContacts, phonebookFilter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.ContainerWrapper}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions.js';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <form action=\"\">\n      <label htmlFor=\"\">\n        {/* <p> Find contacts by name</p> */}\n        <TextField\n          label=\"Find contacts by name...\"\n          variant=\"standard\"\n          placeholder=\"Find contacts by name...\"\n          onChange={e => changeFilter(e.currentTarget.value)}\n          type=\"text\"\n          name=\"name\"\n          id=\"standard-basic\"\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        />\n      </label>\n    </form>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: value => dispatch(changeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","/* import React from 'react';\n\nimport InputForm from './components/InputForm/InputForm';\nimport Filter from './components/Filter/Filter';\nimport Phonebook from './components/Phonebook/Phonebook.container';\nimport Container from './components/Container/Container';\n\nconst App = () => (\n  <>\n    <Container title=\"Phonebook\">\n      <InputForm />\n    </Container>\n    <Container title=\"Contacts\">\n      <Filter />\n      <Phonebook />\n    </Container>\n  </>\n);\n\nexport default App;\n */\n\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Container from './components/Container/Container';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  return (\n    <>\n      <Container className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts:</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  addContact,\n  changeFilter,\n  deleteContact,\n} from './phonebook-actions.js';\n\nconst phonebookContacts = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\nconst phonebookFilter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\nexport default combineReducers({\n  phonebookContacts,\n  phonebookFilter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './phonebook-reducer';\n\nconst ContactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(ContactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/phonebook/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}